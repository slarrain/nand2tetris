// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/09/Square/Square.jack

/**
 * Implements a graphic square. A graphic square has a screen location
 * and a size. It also has methods for drawing, erasing, moving on the
 * screen, and changing its size.
 */
class Square {

    // Location on the screen
    field int x, y;

    // The size of the square
    field int size;

    /** Constructs a new square with a given location and size. */
    constructor Square new(int Ax, int Ay, int Asize) {
        let x = Ax;
        let y = Ay;
        let size = Asize;

        do draw();

        return this;
    }

    /** Deallocates the object's memory. */
    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    /** Draws the square on the screen. */
    method void draw() {
        do Screen.setColor(true);
        do Screen.drawRectangle(x, y, x + size, y + size);
        return;
    }

    /** Erases the square from the screen. */
    method void erase() {
        do Screen.setColor(false);
        do Screen.drawRectangle(x, y, x + size, y + size);
        return;
    }

    /** Moves up by 1 pixels. */
    method void moveUp() {
        if (y > 1) {
            do Screen.setColor(false);
            do Screen.drawRectangle(x, (y + size) - 1, x + size, y + size);
            let y = y - 1;
            do Screen.setColor(true);
            do Screen.drawRectangle(x, y, x + size, y + 1);
        }
        return;
    }

    /** Moves down by 1 pixels. */
    method void moveDown() {
        if ((y + size) < 254) {
            do Screen.setColor(false);
            do Screen.drawRectangle(x, y, x + size, y + 1);
            let y = y + 1;
            do Screen.setColor(true);
            do Screen.drawRectangle(x, (y + size) - 1, x + size, y + size);
        }
        return;
    }

    /** Moves left by 1 pixels. */
    method void moveLeft() {
        if (x > 1) {
            do Screen.setColor(false);
            do Screen.drawRectangle((x + size) - 1, y, x + size, y + size);
            let x = x - 1;
            do Screen.setColor(true);
            do Screen.drawRectangle(x, y, x + 1, y + size);
        }
        return;
    }

    /** Moves right by 1 pixels. */
    method void moveRight() {
        if ((x + size) < 510) {
            do Screen.setColor(false);
            do Screen.drawRectangle(x, y, x + 1, y + size);
            let x = x + 1;
            do Screen.setColor(true);
            do Screen.drawRectangle((x + size) - 1, y, x + size, y + size);
        }
        return;
    }

			// Checks if its game over or Win
			method void check () {
			var int x1, y1, x2, y2;
			let x1 = x;
			let y1 = y;
			let x2 = x1 + size;
			let y2 = y1 + size;

		  do check_up(x1, y1);
		  do check_down(x2, y2);
		  do check_left(x1, y1);
		  do check_right(x2, y2);
			do check_win(x1, y1);
		return;
		}
		//Checks down borders
		// NOTE: You don't die by touching the top of the screen. INTENTIONAL
		method void check_up(int x1, int y1) {
		  if ( ((y1=100) & (x1<400)) | ((y1=160) & (x1>130)) | ((y1=240) & (x1<300))){
		    do game_over();
		  }
			return;
		}

		//Checks down borders
		// NOTE: You don't die by touching the bottom of the screen. INTENTIONAL
		method void check_down(int x2, int y2) {
		  if ( ((y2=30) & (x2<400)) | ((y2=130) & (x2>130)) | ((y2=180) & (x2<300))){
		    do game_over();
		  }
			return;
		}

		//Checks left borders
		method void check_left(int x1, int y1) {
		  if (((x1<400) & ((y1>30)&(y1<100))) | ((x1<100) & ((y1>100)&(y1<180))) | ((x1<300) & ((y1>180)&(y1<240)))){
				  do game_over();
		  }
			return;
		}

		//Checks right borders
		method void check_right(int x2, int y2) {
		  if (((x2=450) & ((y2>0)&(y2<130))) | ((x2=130) & ((y2>130)&(y2<160))) | ((x2=320) & ((y2>160)&(y2<255)))){
				  do game_over();
		  }
			return;
		}

		// Checks if it wins
		method void check_win(int x1, int y1) {
			if  ((x1=1)&(y1>240)) {
				do Screen.clearScreen();
				do Output.printString("CONGRATULATIONS! YOU WIN!");
				do Sys.halt();

			}
			return;
		}

		method void game_over () {
			do Output.printString("You died. GAME OVER");
	    do Sys.halt();
		  return;
		}

}

// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {
    static char newLine, backSpace;
    static int address;



    /** Initializes the keyboard. */
    function void init() {
      let address = 24576;
      let newLine = String.newLine();
      let backSpace = String.backSpace();
      return;
    }

    /**
     * Returns the ASCII code (as char) of the currently pressed key,
     * or 0 if no key is currently pressed.
     * Recognizes all ASCII characters, as well as the following extension
     * of action keys:
     * New line = 128 = String.newline()
     * Backspace = 129 = String.backspace()
     * Left Arrow = 130
     * Up Arrow = 131
     * Right Arrow = 132
     * Down Arrow = 133
     * Home = 134
     * End = 135
     * Page Up = 136
     * Page Down = 137
     * Insert = 138
     * Delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
      return Memory.peek(address);
    }

    /**
     * Reads the next character from the keyboard.
     * waits until a key is pressed and then released, then echoes
     * the key to the screen, and returns the value of the pressed key.
     */
    function char readChar() {
      var char input, value;
      let input = 0;
      while (input = 0){
          do Sys.wait(1);
          let input = Keyboard.keyPressed();
      }
      let value = input;
      while (input = value){
          do Sys.wait(1);
          let input = Keyboard.keyPressed();
      }
      do Output.printChar(value);
      return value;
    }

    /**
     * Prints the message on the screen, reads the next line
     * (until a newline character) from the keyboard, and returns its value.
     */
    function String readLine(String message) {
      var String s;
      var char input;
      let s = String.new(23);
      do Output.printString(message);
      let input = Keyboard.readChar();
      while (~(input = newLine)){
          if (~( (input > 129) & (input < 153) ) ){
              do s.appendChar(input);
          }
          let input = Keyboard.readChar();
      }
      do Output.println();
      return s;
    }

    /**
     * Prints the message on the screen, reads the next line
     * (until a newline character) from the keyboard, and returns its
     * integer value (until the first non numeric character).
     */
    function int readInt(String message) {
      var String string;
      let string = Keyboard.readLine(message);
      return string.intValue();
    }
}
